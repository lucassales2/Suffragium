// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.trinus.suffragium.di;

import com.trinus.suffragium.SuffragiumApplication;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import java.io.File;
import javax.inject.Provider;

public final class AppModule_ProvideCacheDirFactory implements Factory<File> {
  private final AppModule module;

  private final Provider<SuffragiumApplication> applicationProvider;

  public AppModule_ProvideCacheDirFactory(
      AppModule module, Provider<SuffragiumApplication> applicationProvider) {
    this.module = module;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public File get() {
    return Preconditions.checkNotNull(
        module.provideCacheDir(applicationProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<File> create(
      AppModule module, Provider<SuffragiumApplication> applicationProvider) {
    return new AppModule_ProvideCacheDirFactory(module, applicationProvider);
  }
}
